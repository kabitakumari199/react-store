{"ast":null,"code":"import _defineProperty from \"/var/www/html/react-store/store/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/html/react-store/store/src/context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let temProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        temProducts = [...temProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: temProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let temProducts = [...this.state.products];\n      let index = temProducts.indexOf(this.getItem(id));\n      const product = temProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: temProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log(\"this is increment method \".concat(id));\n      let temCart = [...this.state.cart];\n      const selectedProduct = temCart.find(item => item.id === id);\n      const index = temCart.indexOf(selectedProduct);\n      const product = temCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...temCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let temCart = [...this.state.cart];\n      const selectedProduct = temCart.find(item => item.id === id);\n      const index = temCart.indexOf(selectedProduct);\n      const product = temCart[index];\n    };\n\n    this.removeItem = id => {\n      console.log(\"this is removeItem method \".concat(id));\n      let temProducts = [...this.state.products];\n      let temCart = [...this.state.cart];\n      temCart = temCart.filter(item => item.id !== id);\n      console.log('its cart product item', temCart);\n      const index = temProducts.indexOf(this.getItem(id));\n      let removeProduct = temProducts[index];\n      console.log(removeProduct);\n      removeProduct.inCart = false;\n      removeProduct.count = 0;\n      removeProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...temCart],\n          products: [...temProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        modalOpen: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/var/www/html/react-store/store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","setProducts","temProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","console","log","temCart","selectedProduct","decrement","removeItem","filter","removeProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {storeProducts,detailProduct} from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends React.Component {\n  state = {\n    products:[],\n    detailProduct:detailProduct,\n    cart:[],\n    modalOpen:false,\n    modalProduct:detailProduct,\n    cartSubtotal:0,\n    cartTax:0,\n    cartTotal:0\n  }\n\n  componentDidMount(){\n    this.setProducts();\n  }\n\n  setProducts = ()=> {\n    let temProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = {...item};\n      temProducts = [...temProducts,singleItem];\n    });\n    this.setState(()=>{\n      return {products:temProducts};\n    }); \n   }\n\n  getItem = (id) => {\n    const product = this.state.products.find(item=>item.id===id);\n    return product;\n  }\n\n  handleDetail = (id) => {\n    const product = this.getItem(id);\n    this.setState(() => {\n    return{\n      detailProduct:product\n    };\n    });\n  \n  }\n\n  addToCart = (id) => {\n    let temProducts = [...this.state.products];\n    let index = temProducts.indexOf(this.getItem(id));\n    const product = temProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    this.setState(()=>{\n      return {\n        products:temProducts,cart:[...this.state.cart,product]\n      }\n    },()=>{ this.addTotals() });\n    \n  }\n\n  openModal = id =>{\n    const product = this.getItem(id);\n    this.setState(()=>{\n      return{\n        modalProduct:product,modalOpen:true\n      }\n    })\n  }\n  closeModal = () => {\n   this.setState(()=>{\n     return{\n       modalOpen:false\n     }\n   });\n  }\n\n  increment = (id) => {\n    console.log(`this is increment method ${id}`);\n    let temCart = [...this.state.cart];\n    const selectedProduct = temCart.find(item => item.id === id);\n    const index = temCart.indexOf(selectedProduct);\n    const product = temCart[index];\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n    this.setState(()=>{ return{ cart:[...temCart]} }, ()=> { this.addTotals() })\n  }\n  decrement = (id) => {\n    let temCart = [...this.state.cart];\n    const selectedProduct = temCart.find(item => item.id === id);\n    const index = temCart.indexOf(selectedProduct);\n    const product = temCart[index];\n  }\n  removeItem = (id) => {\n    console.log(`this is removeItem method ${id}`);\n    let temProducts = [...this.state.products];\n    let temCart = [...this.state.cart];\n    temCart = temCart.filter(item => item.id !== id);\n    console.log('its cart product item',temCart);\n    const index = temProducts.indexOf(this.getItem(id));\n    let removeProduct = temProducts[index];\n    console.log(removeProduct);\n    removeProduct.inCart = false;\n    removeProduct.count = 0;\n    removeProduct.total = 0;\n    this.setState(()=>{\n      return { cart:[...temCart],\n      products:[...temProducts]\n      }\n    }, ()=>\n    {\n       this.addTotals();\n    }\n    )\n    \n\n  }\n  clearCart = () => {\n \n    this.setState(()=>{\n      return {cart:[]}\n    },\n    ()=> {\n    this.setProducts();\n    this.addTotals();\n    }\n    );\n  }\n \n addTotals = () => {\n   let subTotal = 0;\n   this.state.cart.map(item =>(subTotal += item.total));\n   const tempTax = subTotal * 0.1;\n   const tax = parseFloat(tempTax.toFixed(2));\n   const total = subTotal+tax;\n   this.setState(()=> {\n     return {\n       cartSubtotal:subTotal,\n       cartTax:tax,\n       cartTotal:total\n     }\n   });\n  }\n\n\n  render(){\n    return(\n      <ProductContext.Provider value={{...this.state,\n      handleDetail:this.handleDetail,\n      addToCart:this.addToCart,\n      modalOpen:this.openModal,\n      closeModal:this.closeModal,\n      increment:this.increment,\n      decrement:this.decrement,\n      removeItem:this.removeItem,\n      clearCart:this.clearCart\n      }}>\n      {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\nconst ProductConsumer = ProductContext.Consumer\nexport {ProductProvider,ProductConsumer};"]},"metadata":{},"sourceType":"module"}